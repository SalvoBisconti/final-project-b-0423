import Head from "next/head";
import Layout from "@/components/layout";
import styles from "@/styles/pages/Home.module.scss";
import CardsList from "@/components/cards_list";
import { useEffect, useState } from "react";
import Button from "@/components/button";
import SwitcherTheme from "@/components/switcher-theme";

export default function Home() {
  //const mode = "bg_dark";
  const [sectionCrypto, setSectionCrypto] = useState(false);
  const [sectionWallet, setSectionWallet] = useState(false);
  const [sectionWatchlist, setSectionWatchlist] = useState(false);
  const [allCrypto, setAllCrypto] = useState([]);

  const onHandleCrypto = () => setSectionCrypto((prev) => !prev);
  const onHandleWallet = () => setSectionWallet((prev) => !prev);
  const onHandleWatchlist = () => setSectionWatchlist((prev) => !prev);

  const [isSwitcherTheme, setIsSwitcherTheme] = useState(false);

  const onHandleChangeTheme = () => {
    setIsSwitcherTheme((prev) => !prev);
    console.log(isSwitcherTheme)
  };

  useEffect(() => {
    /*
    fetch(
      process.env.NEXT_PUBLIC_API_URL +
        "markets?vs_currency=eur&order=market_cap_desc&per_page=10&page=1&sparkline=false&locale=en"
    )
      .then((res) => res.json())
      .then((data) => setAllCrypto(data));
      */
  }, []);

  const [wallet, setWallet] = useState(
    typeof window !== "undefined" ? localStorage.getItem("wallet") : null
  );

  const [watchlist, setWatchlist] = useState(
    typeof window !== "undefined" ? localStorage.getItem("watchlist") : null
  );
  
  
  return (
    <>
      <Head>
        <title>Crypie - Cripto Wallet</title>
        <meta name="description" content="Generated by Crypie" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.Main}>
        <Layout theme={isSwitcherTheme}>
          <Button text="buy" className={styles.btn} func={onHandleChangeTheme} />
          <div className={styles.container}>
            <div
              className={`${styles.section} ${
                sectionCrypto && styles.sectionActive
              }`}
            >
              <label
                className={`${styles.sectionTitle} ${
                  sectionCrypto && styles.sectionTitleActive
                }`}
                onClick={onHandleCrypto}
              >
                All crypto
              </label>
              <div
                className={`${styles.sectionCont} ${
                  sectionCrypto && styles.sectionContActive
                }`}
              >
                <CardsList data={allCrypto} inHomeActive={true} />
              </div>
              <div className={styles.sectionButton}>
                <a href="../allCrypto">
                  <Button text={"See all"} />
                </a>
              </div>
            </div>
            <div
              className={`${styles.section} ${
                sectionWallet && styles.sectionActive
              }`}
            >
              <label
                className={`${styles.sectionTitle} ${
                  sectionWallet && styles.sectionTitleActive
                }`}
                onClick={onHandleWallet}
              >
                Wallet
              </label>
              <div
                className={`${styles.sectionCont} ${
                  sectionWallet && styles.sectionContActive
                }`}
              >
                {wallet === true ? (
                  <CardsList data={wallet} inHomeActive={true} />
                ) : (
                  <h2>You don't have any elements in your wallet.</h2>
                )}
              </div>
              <div className={styles.sectionButton}>
                <a href="../wallet">
                  <Button text={"Go to wallet"} />
                </a>
              </div>
            </div>
            <div
              className={`${styles.section} ${
                sectionWatchlist && styles.sectionActive
              }`}
            >
              <label
                className={`${styles.sectionTitle} ${
                  sectionWatchlist && styles.sectionTitleActive
                }`}
                onClick={onHandleWatchlist}
              >
                Watchlist
              </label>
              <div
                className={`${styles.sectionCont} ${
                  sectionWatchlist && styles.sectionContActive
                }`}
              >
                {watchlist === true ? (
                  <CardsList data={watchlist} inHomeActive={true} />
                ) : (
                  <h2>You don't have any elements in your watchlist.</h2>
                )}
              </div>
              <div className={styles.sectionButton}>
                <a href="../watchlist">
                  <Button text={"Go to watchlist"} />
                </a>
              </div>
            </div>
          </div>
        </Layout>
      </main>
    </>
  );
}
